plugins {
    id "nebula.ospackage" version "4.8.0"
}

apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: 'nebula.deb'

version = '0.5.3'

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
    maven {
        url 'http://dl.bintray.com/spectralogic/ds3'
    }
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.5.0'
    compile 'org.codehaus.groovy:groovy-cli-commons:2.5.0'
    compile 'com.spectralogic.ds3:ds3-sdk:3.5.4'
    compile 'ch.qos.logback:logback-core:1.2.3'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'jline:jline:2.14.5'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.2'

    testRuntime "org.junit.platform:junit-platform-launcher:1.2.0"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.2.0"
    testRuntime "org.junit.vintage:junit-vintage-engine:5.2.0"
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.5'
}

task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/version.properties").withWriter { w ->
            Properties p = new Properties()
            p['version'] = project.version
            p.store w, null
        }
    }
}

classes {
    dependsOn createProperties
}

mainClassName = 'com.spectralogic.dsl.Tool'

ospackage {
    packageName = 'bpsh'
    version = "${project.version}"
    release = '1'
    os = LINUX

    from("build/distributions/bpsh-${project.version}.tar") {
        into '/opt/bpsh'
    }
    postInstall("tar xf /opt/bpsh/bpsh-${project.version}.tar -C /opt/bpsh/")
    postInstall("ln -s  /opt/bpsh/bpsh-${project.version}/bin/bpsh /sbin/bpsh")
    preUninstall('unlink /sbin/bpsh')
    preUninstall('rm -rf /opt/bpsh/*')
}

buildDeb {
    requires('openjdk-8-jre')
}

buildRpm {
    requires('java-1.8.0-openjdk')
}
